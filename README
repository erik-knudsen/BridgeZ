ZBridge is a program for bridge players who wants to play
bridge with the help of a computer. There can be from 0 to 4 human players. The
computer(s) plays the non human players. Players can be either local on the local
computer or remote on one or more remote computers. I started development of the
program because I was not satisfied with the (to my knowledge) existing
bridge programs with regard to their net abilities.
ZBridge is for Windows computers. Its companion ZBridgeE is for embedded computers
(currently only Android). They use the same communication protocol i.e. they can
play bridge with each other on the internet. 
Yakindu is used for modelling the states of the communication protocol.
Bridge bidding is implemented by means of a table. Bo Haglunds Double Dummy Solver
is used for calculating the best card to play (version DDS 2.8.4).

The ZBridge software is covered by the GNU GENERAL PUBLIC LICENSE Version3 (GPLv3).


Development environment is Qt with the use of Qt Creator as IDE.

Installation for ZBridge development:

1. Install smartgit (I do not use Qt Creators GIT functionality).
	Clone ZBridge to c:/projects/qt/zbridge
	
2. Install eclipse (I use eclipse for using yakindu and UMLet).
	Install yakindu in eclipse.
	Install UMLet in eclipse.
	Import project ZBridge to eclipse without copy (default)
	
3. Install Qt (at least v. 5)

4. Install DoxyGen
		Install Graphviz
		Install mscgen
		Set dot and mscgen pathes in DoxyFile
                
5. Install Visual Studio Community 2015. Start Visual Studio and create a
   new c++ project and install required parts.
   The Double Dummy Solver by Bo Haglund is generated as a dll. Makefile_Visual
   is used to generate dds.lib and dds.dll files. The dds.lib file is for the linker
   and the dds.dll file is for the executable.
   Use CC_FULL_FLAGS = $(CC_FLAGS) to turn off warnings.
   You can instead use the MinGW c++ compiler, which can be installed as a part
   of Qt. To generate DDS as a dll in this case use Makefile_mingw. Use the dds.dll
   file for both linker and executable.
   In both cases I have found it necessary to remove the automatic initialization
   of the DDS dll and instead initialize in the startup of ZBridge (SetMaxThreads(0)).
   The docs folder has help files used by the Qt help framework to generate help for
   ZBridge. zbridge.qch and zbridge.qhc is for the executable.
